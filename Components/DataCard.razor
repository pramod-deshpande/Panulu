
<style>

    .style-link {
        transition: all 0.4s ease-in-out;
    }


        .style-link:hover {
            transform: scale(1.1);
        }

    .card {
        border: 1px solid @GenerateRandomDarkColor();
   
    }
</style>


<MudGrid Spacing="1" Justify="Justify.Center">

        <MudItem xs="12" sm="8" md="6" lg="12">
            <MudCard Class="card my-3 py-3" Elevation="0" Outlined>
            <MudContainer Class="d-flex gap-2">
                <div class="d-flex flex-column justify-center gap-2">
                    <MudText Typo="Typo.body1">@taskItem.Title</MudText>
                    <MudText Typo="Typo.body2">@taskItem.Note</MudText>
                </div>
             
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Outlined.CheckBoxOutlineBlank" OnClick="HandleClick" />
            </MudContainer>
            </MudCard>

        </MudItem>
    
</MudGrid>





@code {
    [Parameter] public TaskItem taskItem { get; set; }


    string GenerateRandomDarkColor() {
        var random = new Random();
        var color = String.Format("#{0:X6}", random.Next(0x1000000) & 0x7F7F7F);
        return color;
    }


    private async Task HandleClick() {
        taskItem.CompletionDateTime = DateTime.Now;
        taskItem.IsCompleted = true;
        await Db.SaveItemAsync(taskItem);
        RefreshStateHelper.CallRequestRefresh();
        StateHasChanged();
        Snackbar.DisplaySuccessSnackBar();
        

    }
}
